{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","React","createElement","className","alt","src","concat","CardList","robots","map","user","i","key","SearchBox","seachfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","hasError","_inherits","_createClass","value","Component","App","onSearchChange","event","setState","searchField","target","console","log","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.641a0e83.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ name, email, id }) => {\n    return(     \n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from '../Components/Card';\n\nconst CardList = ({robots}) => {  \n    // if(true){\n    //     throw new Error('NOOOOOO');\n    // }  \n    return (\n        <div>\n            {\n            robots.map((user,i) => {\n                return (\n                <Card \n                key={i} \n                id={robots[i].id} \n                name={robots[i].name} \n                email={robots[i].email}\n                />\n                );\n            })      \n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({seachfield,searchChange}) => {\n    return (\n        <div className='pa2'> \n           <input  \n           className='pa3 ba b--green bg-lightest-blue' \n           type='searchBox' \n           placeholder='search robots' \n           onChange={searchChange}\n           />\n        </div>\n    );\n}\n\nexport  default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    // componentDidCatch(error,info) {\n    //     this.setState({hasError:false})\n    // }\n\n    render() {\n        if(this.state.hasError) {\n          return  <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport Scroll from '../Components/Scroll';\nimport ErrorBoundry  from '../Components/ErrorBoundry';\nimport '../Containers/App.css'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchField: ''\n    }\n    console.log('component');\n  }\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({robots: users}));\n \n  console.log('componentDidMount')\n}  \n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value})\n  }\n\n  render() {\n    const { robots, searchField } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n   return !robots.length ?\n     <h1>Loading</h1> :\n   (\n      <div className='tc'>\n            <h1 className='f1'>RoboFriends</h1>\n            <SearchBox searchChange={this.onSearchChange} />\n            <Scroll>\n              <ErrorBoundry> \n                <CardList robots ={filteredRobots}/>\n              </ErrorBoundry>\n            \n            </Scroll>            \n          </div>\n    );     \n  } \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './Containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\n\n// ReactDOM.render(<App/>,document.getElementById('root'));\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}